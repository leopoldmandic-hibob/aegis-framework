# Task Transition Operation Pattern
version: 1.0
command: internal
description: "Standardized task state transition operation"

validation:
  source: validation.yaml
  rules:
    - file_operations.move
    - state_transitions.task

flow:
  pre_checks:
    - task_exists: {verify: file_exists, error: "Task file not found"}
    - valid_state: {verify: state_valid, error: "Invalid current state"}
    - allowed_transition: {verify: transition_allowed, error: "Transition not allowed"}
  
  steps:
    1_prepare_transition:
      action: validate_transition
      checks:
        - current_state: {type: state_check}
        - target_state: {type: state_valid}
        - transition: {type: allowed_transition}
    
    2_check_test_status:
      action: check_test_status
      condition: ${operation} == "complete"
      checks:
        - test_status_section: {type: section_exists, section: "Test Status", error: "Test Status section not found"}
        - test_status: {type: extract_value, pattern: "Status: ([\\w\\s]+)", section: "Test Status", error: "Test status not found"}
      responses:
        - condition: ${test_status} == "Passing" || ${test_status} == "Not Applicable"
          action: proceed
        - condition: ${test_status} == "Failing" || ${test_status} == "Not Started"
          action: user_prompt
          message: "Warning: Task has test status '${test_status}'. Do you want to complete it anyway? (yes/no)"
          responses:
            - yes: proceed
            - no: abort
      validate:
        - status_valid: {error: "Invalid test status value"}
    
    3_update_task:
      action: update_frontmatter
      updates:
        - field: status
          value: ${target_state}
        - field: updated
          value: "${local_time}"
        - field: state_changed
          value: "${local_time}"
      validate:
        - timestamps: {error: "Invalid timestamps"}
    
    4_move_file:
      action: move_file
      source: ${current_path}
      target: ${target_path}
      validate:
        - source_exists: {error: "Source file must exist"}
        - target_valid: {error: "Target directory must be valid"}
        - permissions_ok: {error: "Must have write permissions"}
      
    5_verify:
      action: verify_transition
      checks:
        - file_moved: {type: file_check}
        - state_updated: {type: state_check}

# Directory mappings for state transitions
state_directories:
  planned: tasks/planned
  active: tasks/active
  completed: tasks/completed
  hold: tasks/hold

# Explicit move operations
move_operations:
  start:
    from: planned
    to: active
    command: mv ${source} ${target}
  
  complete:
    from: active
    to: completed
    command: mv ${source} ${target}
  
  hold:
    from: active
    to: hold
    command: mv ${source} ${target}
  
  resume:
    from: hold
    to: active
    command: mv ${source} ${target}

# Error prevention
safeguards:
  - no_copy: "Always use move operations, never copy"
  - verify_move: "Verify file exists in new location"
  - cleanup: "Remove any duplicate files"
  - state_check: "Verify state matches directory"

# Test Status validation
test_status:
  valid_values:
    - "Not Started"
    - "Failing"
    - "Passing"
    - "Not Applicable"
  completion_checks:
    auto_complete:
      - "Passing"
      - "Not Applicable"
    confirm_required:
      - "Failing"
      - "Not Started"
  error_messages:
    invalid_status: "Invalid test status: must be one of Not Started, Failing, Passing, or Not Applicable"
    missing_section: "Missing Test Status section: all tasks must include this section"
    confirmation_required: "Task has tests in '${status}' state. Confirmation required to complete."

transitions:
  start:
    from: planned
    to: active
    update:
      - status
      - start_time

  complete:
    from: active
    to: completed
    update:
      - status
      - end_time

  hold:
    from: active
    to: hold
    update:
      - status
      - hold_time

  resume:
    from: hold
    to: active
    update:
      - status
      - resume_time
