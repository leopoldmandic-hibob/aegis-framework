# Operation Validation Rules
version: 1.0
description: Central validation rules for framework operations

# File System Operations
file_operations:
  move:
    rules:
      - source_exists: "Source file must exist"
      - target_valid: "Target directory must be valid"
      - permissions_ok: "Must have write permissions"
    patterns:
      task_move:
        - from: "tasks/planned/"
          to: "tasks/active/"
          requires: "start"
        - from: "tasks/active/"
          to: "tasks/completed/"
          requires: "complete"
        - from: "tasks/active/"
          to: "tasks/hold/"
          requires: "hold"
        - from: "tasks/hold/"
          to: "tasks/active/"
          requires: "resume"
    validation:
      rules:
        file_operations:
          move:
            command: mv
            disallowed:
              - cp
              - copy
            error: "Must use mv command for task transitions, never cp or copy"
            validate:
              - source_exists
              - target_valid
              - no_duplicates

# State Transitions
state_transitions:
  task:
    states:
      - planned
      - active
      - completed
      - hold
    allowed:
      planned:
        - to: active
          command: start
      active:
        - to: completed
          command: complete
        - to: hold
          command: hold
      hold:
        - to: active
          command: resume
    timestamps:
      - field: updated
        value: "${local_time}"
      - field: state_changed
        value: "${local_time}"

# Template Validation
template_validation:
  task:
    required_fields:
      - title: string
      - type: task
      - status: [planned|active|hold|completed]
      - created: date
      - updated: date
      - id: TASK-[000]
      - priority: [high|medium|low]
      - memory_types: list
    
    optional_fields:
      - dependencies: list
      - tags: list
      - estimated_time: string
      - assignee: string
    
    field_validation:
      title:
        - required: true
        - type: string
        - min_length: 3
      type:
        - required: true
        - value: task
      status:
        - required: true
        - enum: [planned, active, hold, completed]
      created:
        - required: true
        - format: YYYY-MM-DDTHH:MM:SS
      updated:
        - required: true
        - format: YYYY-MM-DDTHH:MM:SS
      id:
        - required: true
        - pattern: "TASK-\\d{3}"
      priority:
        - required: true
        - enum: [high, medium, low]
      dependencies:
        - required: false
        - type: list
      tags:
        - required: false
        - type: list
      estimated_time:
        - required: false
        - type: string
        - pattern: "\\d+\\s+(hours|days)"
      assignee:
        - required: false
        - type: string
      memory_types:
        - required: true
        - type: list
        - min_items: 1
        - description: "Types of memory this task affects"
        - valid_values:
          - procedural
          - semantic
          - episodic

    required_sections:
      - Description
      - Objectives
      - Steps
      - Progress
      - Dependencies
      - Notes
      - Next Steps
    format:
      - markdown_valid
      - front_matter_valid
      - sections_complete

  session:
    required_fields:
      - type: session
      - status: [active|completed]
      - started: date
      - id: SESSION-[000]
      - memory_types: list
    
    optional_fields:
      - ended: date
      - tags: list
    
    field_validation:
      type:
        - required: true
        - value: session
      status:
        - required: true
        - enum: [active, completed]
      started:
        - required: true
        - format: YYYY-MM-DDTHH:MM:SS
      id:
        - required: true
        - pattern: "SESSION-\\d{3}"
      memory_types:
        - required: true
        - type: list
        - min_items: 1
        - valid_values:
          - procedural
          - semantic
          - episodic
      ended:
        - required: false
        - format: YYYY-MM-DDTHH:MM:SS
      tags:
        - required: false
        - type: list

    required_sections:
      - Focus
      - Context
      - Progress
      - Decisions
      - Self-Improvement
      - Dependencies
      - Next Steps
      - Notes
    format:
      - markdown_valid
      - front_matter_valid
      - sections_complete

# Task Creation Validation
task_creation:
  template:
    source: .context/templates/tasks/TEMPLATE.md
    validation:
      - exists: "Template file must exist"
      - readable: "Template must be readable"
      - format_valid: "Template must be valid markdown"
  
  content:
    front_matter:
      - required: "All required fields must be present"
      - format: "Fields must match expected format"
      - values: "Values must be from allowed set"
    sections:
      - required: "All template sections must be present"
      - order: "Sections must maintain template order"
      - format: "Section formatting must match template"
  
  location:
    new_tasks:
      - directory: "tasks/planned"
      - unique: "No duplicate task IDs"
      - writable: "Directory must be writable"

# Session Creation Validation
session_creation:
  template:
    source: .context/templates/sessions/TEMPLATE.md
    validation:
      - exists: "Template file must exist"
      - readable: "Template must be readable"
      - format_valid: "Template must be valid markdown"
  
  content:
    front_matter:
      - required: "All required fields must be present"
      - format: "Fields must match expected format"
      - values: "Values must be from allowed set"
    sections:
      - required: "All template sections must be present"
      - order: "Sections must maintain template order"
      - format: "Section formatting must match template"
  
  location:
    new_sessions:
      - directory: "sessions"
      - unique: "No duplicate session IDs"
      - writable: "Directory must be writable"

# Time and Date Rules
timestamps:
  format: "%Y-%m-%dT%H:%M:%S%z"  # ISO-8601 format
  variables:
    current_time: "${local_time}"  # Use local machine time
    created_time: "${local_time}"
    updated_time: "${local_time}"
  validation:
    - pattern: "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[+-]\\d{4}"
    - timezone: required
    - source: local_machine

# Task Validation Rules
task_validation:
  timestamps:
    created:
      format: "${local_time}"
      immutable: true
    updated:
      format: "${local_time}"
      update_on:
        - content_change
        - state_change
        - metadata_change

# Self-Improvement Validation
self_improvement_validation:
  data_structure:
    self_improvement_json:
      required_fields:
        - metadata
        - insights
        - metrics
        - recommendations
      metadata:
        required:
          - version
          - last_updated
        format:
          version: string
          last_updated: YYYY-MM-DDTHH:MM:SS
      insights:
        required_categories:
          - process
          - efficiency
          - patterns
          - blockers
        format: array
      metrics:
        required_categories:
          - time_allocation
          - task_completion
        time_allocation:
          required:
            - categories
            - history
          categories:
            required:
              - implementation
              - planning
              - documentation
              - debugging
              - other
            format: numeric
        task_completion:
          required:
            - average_completion_time
          format: numeric
      recommendations:
        required_categories:
          - process_improvements
          - efficiency_improvements
          - risk_mitigations
        format:
          text: string
          priority: [high|medium|low]
          category: [process|efficiency|risk]
          created: YYYY-MM-DDTHH:MM:SS
          applied: boolean
          result: string
  
  session_validation:
    self_improvement_section:
      required: true
      subsections:
        - Insights
        - Metrics
        - Recommendations
      insights:
        min_count: 1
        max_count: 5
        format: "Bullet points"
      metrics:
        required_metrics:
          - "Task completion rate"
          - "Time allocation"
        optional_metrics:
          - "Decision efficiency"
          - "Pattern frequency"
        format: "Bullet points with numeric values"
      recommendations:
        min_count: 1
        max_count: 3
        format: "Prioritized bullet points ([Priority level] Recommendation text)"
  
  analysis_validation:
    data_requirements:
      minimum_sessions: 1
      minimum_tasks: 1
      minimum_decisions: 0
    insight_generation:
      minimum_insights: 1
      maximum_insights: 10
      required_categories:
        - process
        - efficiency
      optional_categories:
        - patterns
        - blockers
    recommendation_generation:
      minimum_recommendations: 1
      maximum_recommendations: 5
      priority_distribution:
        high: "maximum 1"
        medium: "maximum 2"
        low: "maximum 2"
  
  integration_validation:
    save_operation:
      required_steps:
        - analyze_session
        - update_session_with_insights
      output_validation:
        self_improvement_json: "updated"
        session_document: "contains Self-Improvement section"
    start_operation:
      required_steps:
        - load_recommendations
        - apply_to_session
      output_validation:
        session_document: "contains applied recommendations"

# Error Messages
error_messages:
  file:
    not_found: "File {path} does not exist"
    no_permission: "No permission to access {path}"
    invalid_target: "Invalid target directory {path}"
  
  template:
    missing: "Template {path} does not exist"
    invalid: "Template {path} is not valid"
    format_error: "Template format error in {path}: {error}"
  
  task:
    duplicate: "Task with ID {id} already exists"
    invalid_state: "Invalid task state: {state}"
    missing_field: "Required field missing in task: {field}"
    invalid_field: "Invalid field value in task: {field}"
  
  session:
    invalid_state: "Invalid session state: {state}"
    missing_field: "Required field missing in session: {field}"
    invalid_field: "Invalid field value in session: {field}"
    missing_section: "Required section missing in session: {section}"
  
  self_improvement:
    data_invalid: "Self-improvement data structure invalid: {error}"
    missing_field: "Required field missing in self-improvement data: {field}"
    invalid_insight: "Invalid insight format: {error}"
    missing_section: "Required Self-Improvement section missing in session"
    validation_failed: "Self-improvement validation failed: {error}"

# Validation Commands
validation_commands:
  task:
    validate_task: "Validate task structure and content"
    validate_state: "Validate task state transition"
    validate_fields: "Validate task fields"
  
  session:
    validate_session: "Validate session structure and content"
    validate_state: "Validate session state"
    validate_fields: "Validate session fields"
  
  self_improvement:
    validate_data: "Validate self-improvement data structure"
    validate_session_integration: "Validate self-improvement session integration"
    validate_analysis: "Validate self-improvement analysis results"

# State Validation Rules
state_validation:
  project_context:
    - file_exists: "memory/project/context/project.json exists"
    - format_valid: "JSON format is valid"
    - required_fields:
        - type
        - category
        - id
        - created
        - updated
        - content
    - content_fields:
        - name
        - version
        - description
        - status
        - phase
        - activeTasks
        - completedTasks
        - decisions
        - components
    - consistency:
        - activeTasks: "Match files in tasks/active/"
        - completedTasks: "Match files in tasks/completed/"
        - timestamp: "Updated timestamp is current"
  
  self_improvement:
    - file_exists: "memory/project/self_improvement.json exists"
    - format_valid: "JSON format is valid"
    - required_fields:
        - type
        - category
        - id
        - created
        - updated
        - content
    - content_fields:
        - metrics
        - patterns
        - recommendations
        - insights
    - consistency:
        - timestamp: "Updated timestamp is current"
  
  session_memory:
    - file_exists: "memory/session/active.json exists"
    - format_valid: "JSON format is valid"
    - required_fields:
        - type
        - category
        - id
        - created
        - updated
        - content
    - content_fields:
        - sessionId
        - status
        - started
        - activeTask
        - progress
        - context
        - decisions
        - insights
    - consistency:
        - sessionId: "Match most recent session file"
        - status: "Match most recent session file"
        - timestamp: "Updated timestamp is current"
        - activeTask: "Match current active task in project.json"
        - decisions: "Match decisions made in current session"
    - history:
        - directory_exists: "memory/session/history/ exists"
        - format: "YYYY-MM-DD-sessionId.json"
        - consistency: "History files match session files in sessions/"

# Reconciliation Rules
reconcile:
  - framework_ready: "Framework structure is valid"
  - state_files_exist: "All state files exist"
  - state_format_valid: "State file formats are valid"
  - task_consistency: "Task lists match directory contents"
  - decision_consistency: "Decision list matches directory contents"
  - session_consistency: "Session memory matches session files"
  - timestamp_valid: "Timestamps are in correct format and current"
  - session_memory_reconciliation: "Session memory is reconciled with session files"

# Session Memory Reconciliation Steps
session_memory_reconciliation:
  active_session:
    - find_latest_session: "Find the most recent session file in sessions/"
    - extract_metadata: "Extract session metadata (id, status, started, etc.)"
    - extract_content: "Extract session content (focus, progress, decisions, etc.)"
    - update_active_json: "Update memory/session/active.json with extracted data"
    - validate_update: "Validate that active.json is consistent with session file"
  
  session_history:
    - find_all_sessions: "Find all session files in sessions/"
    - create_history_dir: "Ensure memory/session/history/ exists"
    - for_each_session:
        - extract_metadata: "Extract session metadata"
        - extract_content: "Extract session content"
        - create_history_file: "Create history file in memory/session/history/"
        - validate_history_file: "Validate history file format and content"
    - validate_history: "Validate that history directory contains all sessions"

# Command Validation Patterns
command_validation:
  save:
    pre_execution:
      - identify_decisions_to_record: "Identify any significant decisions made during the session"
      - identify_self_improvement_updates: "Identify insights and metrics for self-improvement"
      - check_task_progress: "Check for task progress updates"
    execution:
      - update_session_document: "Update the session document with progress, decisions, and insights"
      - create_decision_records: "Create decision records for significant decisions"
      - update_self_improvement_record: "Update self-improvement record with new insights"
      - update_task_progress: "Update task progress and status"
    post_execution:
      - verify_session_document_updated: "Verify session document has been updated"
      - verify_decision_records_created: "Verify decision records have been created"
      - verify_self_improvement_updated: "Verify self-improvement record has been updated"
      - verify_task_progress_updated: "Verify task progress has been updated"
    completion:
      - only_if_all_steps_verified: true
  
  start:
    pre_execution:
      - check_active_session: "Check if there's already an active session"
      - identify_focus: "Identify the focus for the new session"
      - load_context: "Load relevant context for the session"
    execution:
      - create_session_document: "Create a new session document"
      - set_initial_focus: "Set the initial focus for the session"
      - load_recommendations: "Load recommendations from self-improvement"
      - update_session_memory: "Update session memory with new session"
    post_execution:
      - verify_session_document_created: "Verify session document has been created"
      - verify_session_memory_updated: "Verify session memory has been updated"
    completion:
      - only_if_all_steps_verified: true
  
  task:
    pre_execution:
      - identify_task_operation: "Identify the task operation (create, update, transition)"
      - load_task_context: "Load relevant task context"
      - validate_task_state: "Validate the current task state"
    execution:
      - perform_task_operation: "Perform the requested task operation"
      - update_task_document: "Update the task document"
      - update_project_context: "Update project context with task changes"
    post_execution:
      - verify_task_document_updated: "Verify task document has been updated"
      - verify_project_context_updated: "Verify project context has been updated"
    completion:
      - only_if_all_steps_verified: true
  
  status:
    pre_execution:
      - load_project_context: "Load project context"
      - load_active_tasks: "Load active tasks"
      - load_recent_changes: "Load recent changes"
    execution:
      - generate_status_report: "Generate status report"
      - include_active_tasks: "Include active tasks in report"
      - include_recent_changes: "Include recent changes in report"
      - include_self_improvement_insights: "Include self-improvement insights in report"
    post_execution:
      - verify_report_complete: "Verify report is complete"
    completion:
      - only_if_all_steps_verified: true
  
  context:
    pre_execution:
      - load_project_context: "Load project context"
      - load_active_tasks: "Load active tasks"
      - load_recent_decisions: "Load recent decisions"
    execution:
      - generate_context_report: "Generate context report"
      - include_active_tasks: "Include active tasks in report"
      - include_recent_decisions: "Include recent decisions in report"
      - include_relevant_insights: "Include relevant insights in report"
    post_execution:
      - verify_report_complete: "Verify report is complete"
    completion:
      - only_if_all_steps_verified: true
  
  reconcile:
    pre_execution:
      - check_framework_structure: "Check framework structure"
      - load_project_context: "Load project context"
      - load_session_memory: "Load session memory"
    execution:
      - check_task_consistency: "Check task consistency"
      - check_decision_consistency: "Check decision consistency"
      - check_session_consistency: "Check session consistency"
      - update_project_context: "Update project context"
      - update_session_memory: "Update session memory"
      - update_session_history: "Update session history"
    post_execution:
      - verify_project_context_updated: "Verify project context has been updated"
      - verify_session_memory_updated: "Verify session memory has been updated"
      - verify_session_history_updated: "Verify session history has been updated"
    completion:
      - only_if_all_steps_verified: true
